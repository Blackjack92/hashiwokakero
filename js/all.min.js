
class Chip {
    
    constructor(connections, x, y, mark_function) {
        this.connections = connections;
        this.x = x;
        this.y = y;
        this.mark_function = mark_function;
        this.marked = false;
    }
    
    draw() {
        var btn = document.createElement("button");
        btn.className = "mc";
        var ref = this;
        btn.onclick = function(){

            ref.mark_function(ref);
            ref.marked = !ref.marked;
            $(this).css('background-color', ref.marked ? "green" : "transparent");
        };
        
        var t = document.createElement("span");
        t.className = 'mc-' + this.connections;
        btn.appendChild(t);
        return btn;
    }
}

class Connection {
    
    constructor(x_start, y_start, x_end, y_end) {
        this.x_start = x_start;
        this.y_start = y_start;
        this.x_end = x_end;
        this.y_end = y_end;
    }
    
}

class Game {
    
    constructor(x_size, y_size) {
        this.x_size = x_size;
        this.y_size = y_size;
        
        this.chips = [];
        this.connections = [];
        
        this.marked = [];
    }

    init_by_json(json) {
    }
    
    init() {
        var mark_function = function(chip) {
            alert(chip.connections + " " + chip.marked);
        };
        
        this.chips[0] = new Chip(2, 0, 0, mark_function);
        this.chips[1] = new Chip(2, 4, 0, mark_function);
        this.chips[2] = new Chip(3, 0, 2, mark_function);

        this.chips[3] = new Chip(5, 2, 2, mark_function);
        this.chips[4] = new Chip(4, 4, 2, mark_function);
        this.chips[5] = new Chip(2, 0, 4, mark_function);
        
        this.chips[6] = new Chip(4, 2, 4, mark_function);
    }

    get_chip(x, y) {
        for (var i = 0; i < this.chips.length; i++) {
            var chip = this.chips[i];
            if (chip.x === x && chip.y === y) {
                return chip;
            }
        }
        return undefined;
    }
    
    draw() {
        var table = document.createElement("table");
        var table_body = document.createElement("tbody");
        for (var row = 0; row < this.y_size; row++) {
            var table_row = document.createElement("tr");
            for (var col = 0; col < this.x_size; col++) {
                var table_data = document.createElement('td');
                var chip = this.get_chip(col, row);
                if (chip === undefined) {
                    // co-ho-double
                    var span = document.createElement("span");
                    span.className = 'empty';
                    table_data.appendChild(span);
                } else {
                    table_data.appendChild(chip.draw());
                }
                    
                table_row.appendChild(table_data);
            }
            table_body.appendChild(table_row);
        }
        table.appendChild(table_body);
        return table;
    }

    is_finished() {
    }
    
}

var game = new Game(5, 5);

function init() {
    game.init();
}

function draw() {
    table = game.draw();
    $("div.game").empty();
    var test = $("div.game")[0];
    test.appendChild(table);
}
